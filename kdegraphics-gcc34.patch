--- kdegraphics-3.2.0/kpovmodeler/pmvariant.cpp.orig	2002-12-30 20:55:16.000000000 +0100
+++ kdegraphics-3.2.0/kpovmodeler/pmvariant.cpp	2004-02-20 12:25:18.236922312 +0100
@@ -311,7 +311,7 @@
       m_dataType = PMVariant::ObjectPointer;
    }
    else
-      ( ( PMObject* ) m_pData ) = obj;
+      m_pData = obj;
 }
 
 int PMVariant::intData( ) const
diff -uNr kdegraphics-3.2.0/ksvg/ecma.orig/ksvg_bridge.h kdegraphics-3.2.0/ksvg/ecma/ksvg_bridge.h
--- kdegraphics-3.2.0/ksvg/ecma.orig/ksvg_bridge.h	2003-10-26 11:52:36.000000000 +0100
+++ kdegraphics-3.2.0/ksvg/ecma/ksvg_bridge.h	2004-02-20 14:08:54.487908520 +0100
@@ -90,7 +90,7 @@
 //			kdDebug(26004) << "KSVGBridge::put(), " << propertyName.qstring() << " Name: " << classInfo()->className << " Object: " << m_impl << endl;
 
 		// Try to see if we know this property (and need to take special action)
-		if(m_impl->put(exec, propertyName, value, attr))
+		if(this->m_impl->put(exec, propertyName, value, attr))
 			return;
 
 		// We don't -> set property in ObjectImp.
diff -uNr kdegraphics-3.2.0/ksvg/ecma.orig/ksvg_lookup.h kdegraphics-3.2.0/ksvg/ecma/ksvg_lookup.h
--- kdegraphics-3.2.0/ksvg/ecma.orig/ksvg_lookup.h	2004-02-20 13:19:01.000000000 +0100
+++ kdegraphics-3.2.0/ksvg/ecma/ksvg_lookup.h	2004-02-20 14:27:50.759169032 +0100
@@ -26,6 +26,8 @@
 #include <kjs/interpreter.h> // for ExecState
 
 class KSVGScriptInterpreter;
+template <class T> class KSVGBridge;
+#include "ksvg_scriptinterpreter.h"
 
 #define KSVG_GET_COMMON \
 public: \
diff -uNr kdegraphics-3.2.0/ksvg/ecma.orig/ksvg_scriptinterpreter.h kdegraphics-3.2.0/ksvg/ecma/ksvg_scriptinterpreter.h
--- kdegraphics-3.2.0/ksvg/ecma.orig/ksvg_scriptinterpreter.h	2003-05-10 11:32:50.000000000 +0200
+++ kdegraphics-3.2.0/ksvg/ecma/ksvg_scriptinterpreter.h	2004-02-20 14:42:18.795207496 +0100
@@ -100,7 +100,7 @@
 	{
 		ClassCtor* ctor = new ClassCtor(exec); // create the ClassCtor instance
 		KJS::Object newObject(new KSVGBridge<ClassCtor>(exec, ctor)); // create the bridge around it
-		exec->interpreter()->globalObject().put(exec, propertyName, newObject, Internal);
+		exec->interpreter()->globalObject().put(exec, propertyName, newObject, KJS::Internal);
 		return newObject;
 	}
 }
diff -uNr kdegraphics-3.2.0/ksvg/impl.orig/SVGHelperImpl.h kdegraphics-3.2.0/ksvg/impl/SVGHelperImpl.h
--- kdegraphics-3.2.0/ksvg/impl.orig/SVGHelperImpl.h	2003-08-27 22:08:25.000000000 +0200
+++ kdegraphics-3.2.0/ksvg/impl/SVGHelperImpl.h	2004-02-20 14:07:52.000000000 +0100
@@ -24,6 +24,7 @@
 #include <dom/dom_element.h>
 
 #include "SVGLengthImpl.h"
+#include "SVGElementImpl.h"
 
 #include "ksvg_lookup.h"
 
@@ -56,7 +57,7 @@
 		{
 			T *cast = dynamic_cast<T *>(element->ownerDoc()->getElementFromHandle(node.handle()));
 			if(cast)
-				cast->putValueProperty(element->ownerDoc()->ecmaEngine()->globalExec(), token, KJS::String(value), Internal);
+				cast->putValueProperty(element->ownerDoc()->ecmaEngine()->globalExec(), token, KJS::String(value), KJS::Internal);
 		}
 	}
 
diff -uNr kdegraphics-3.2.0/ksvg/impl.orig/SVGList.h kdegraphics-3.2.0/ksvg/impl/SVGList.h
--- kdegraphics-3.2.0/ksvg/impl.orig/SVGList.h	2004-01-17 13:52:40.000000000 +0100
+++ kdegraphics-3.2.0/ksvg/impl/SVGList.h	2004-02-20 14:05:48.000000000 +0100
@@ -48,7 +48,7 @@
 {
 public:
 	SVGList() { m_impl.setAutoDelete(false); }
-	SVGList(const SVGList &) { *this = other; }
+	SVGList(const SVGList &other) { *this = other; }
 	~SVGList() { clear(); }
 
 	SVGList<T> &operator=(const SVGList<T> &other)
